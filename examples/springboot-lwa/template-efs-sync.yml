AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: >
  sam-app

  Sample SAM Template for sam-app

Parameters:
  EFSAccessPointArn:
    Type: String
  EFSMountPath:
    Type: String
    Default: /mnt/efs
  SecurityGroups:
    Type: CommaDelimitedList
  SubnetIds:
    Type: CommaDelimitedList

Globals:
  Function:
    Timeout: 30

Resources:
  NacosAdapterLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      ContentUri: ./layer

  NacosAdapterSpringBootFunction:
    Type: AWS::Serverless::Function
    Properties:
      MemorySize: 1024
      Handler: run.sh
      CodeUri: app/
      Runtime: java11
      AutoPublishAlias: live
      SnapStart:
        ApplyOn: PublishedVersions
      Environment:
        Variables:
          PORT: "8000"
          RUST_LOG: info,lambda_web_adapter=debug,aws_lambda_nacos_adapter=debug
          READINESS_CHECK_PATH: /healthz
          JAVA_TOOL_OPTIONS: -DJM.LOG.PATH=/tmp/nacos/logs -DJM.SNAPSHOT.PATH=/tmp/
          AWS_LAMBDA_NACOS_ADAPTER_CONFIG_PATH: /mnt/efs/nacos/
          AWS_LAMBDA_EXEC_WRAPPER: /opt/bootstrap
          AWS_LAMBDA_NACOS_ADAPTER_SYNC_PORT: 6666
      Layers:
        - !Ref NacosAdapterLayer
      Events:
        Root:
          Type: HttpApi
          Properties:
            Path: /{proxy+}
            Method: ANY
      FileSystemConfigs:
        - Arn: !Ref EFSAccessPointArn
          LocalMountPath: !Ref EFSMountPath
      VpcConfig:
        SecurityGroupIds: !Ref SecurityGroups
        SubnetIds: !Ref SubnetIds

Outputs:
  ConfigGetterURL:
    Description: "API Gateway endpoint URL for Prod stage to get the config"
    Value: !Sub "https://${ServerlessHttpApi}.execute-api.${AWS::Region}.${AWS::URLSuffix}/config/get"
